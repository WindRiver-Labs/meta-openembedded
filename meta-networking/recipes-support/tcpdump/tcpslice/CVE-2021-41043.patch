From e9df77662495ab120bfe7808a3f9b3310ac83a31 Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Thu, 30 Dec 2021 17:52:52 +0000
Subject: [PATCH] CVE-2021-41043: Fix a use-after-free in extract_slice().

This issue was discovered by Mohammad Hosein Askari (@C0NSTANTINE110),
see GitHub issue #11.

In extract_slice() pcap_dump_open() takes a pcap_t argument to tell
which DLT to use for the output file.  This used to be the pcap_t of the
first input file, as main() requires at least one input file.  However,
the loop before pcap_dump_open() closes all, including the first, input
files that don't meet a test condition.  This way, when the first file
didn't meet the condition, the call to pcap_dump_open() would end up as
a use-after-free.  Make the pcap_dump_open() call before the loop, when
the first array element is always valid, and fix this problem.

CVE: CVE-2021-41043

Upstream-Status: Backport
[https://github.com/the-tcpdump-group/tcpslice/commit/030859fce9c77417de657b9bb29c0f78c2d68f4a]
[Adjust context for tcpslice 1.2a3]

Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 tcpslice.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/tcpslice.c b/tcpslice.c
index adb3d4b..12c9b2e 100644
--- a/tcpslice.c
+++ b/tcpslice.c
@@ -619,6 +619,13 @@ extract_slice(struct state *states, int numfiles, char *write_file_name,
 	TV_SUB(start_time, base_time, &relative_start);
 	TV_SUB(stop_time, base_time, &relative_stop);
 
+	/* Always write the output file, use the first input file's DLT. */
+	dumper = pcap_dump_open(states[0].p, write_file_name);
+	if (! dumper) {
+		error("error creating output file '%s': %s",
+		      write_file_name, pcap_geterr(states[0].p));
+	}
+
 	for (i = 0; i < numfiles; ++i) {
 		s = &states[i];
 
@@ -657,12 +664,6 @@ extract_slice(struct state *states, int numfiles, char *write_file_name,
 		get_next_packet(s);
 	}
 
-	dumper = pcap_dump_open(states->p, write_file_name);
-	if (! dumper) {
-		error( "error creating output file %s: ",
-			write_file_name, pcap_geterr( states->p ) );
-	}
-
 
 	/*
 	 * Now, loop thru all the packets in all the files,
-- 
2.25.1

