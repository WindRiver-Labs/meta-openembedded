From 64f6392084ec0768b8afc04612eac0a458bc5e0d Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Tue, 7 Jul 2015 20:08:55 -0700
Subject: [PATCH] CVE-2016-7923/Don't assume the target hardware address is <=
 6 octets long.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

It might not be, either because an unusual hardware type is using ARP or
because a maliciously-constructed packet was sent.  Instead of comparing
against a 6-octet string of zeros with memcmp(), check each octet of the
address against 0.

Fixes a heap overflow found with American Fuzzy Lop by Hanno BÃ¶ck.
---
 print-arp.c                 |   14 ++++++++++++--
 tests/TESTLIST              |    1 +
 tests/arp-too-long-tha.out  |    1 +
 tests/arp-too-long-tha.pcap |  Bin 0 -> 180 bytes
 4 files changed, 14 insertions(+), 2 deletions(-)
 create mode 100644 tests/arp-too-long-tha.out
 create mode 100644 tests/arp-too-long-tha.pcap

diff --git a/print-arp.c b/print-arp.c
index 79c8ecb..eff97c4 100644
--- a/print-arp.c
+++ b/print-arp.c
@@ -176,7 +176,17 @@ struct  atmarp_pkthdr {
 #define ATMTSA(ap) (aar_tsa(ap))
 #define ATMTPA(ap) (aar_tpa(ap))
 
-static u_char ezero[6];
+static int
+isnonzero(const u_char *a, size_t len)
+{
+	while (len > 0) {
+		if (*a != 0)
+			return (1);
+		a++;
+		len--;
+	}
+	return (0);
+}
 
 static void
 atmarp_addr_print(netdissect_options *ndo,
@@ -357,7 +367,7 @@ arp_print(netdissect_options *ndo,
 
 	case ARPOP_REQUEST:
 		ND_PRINT((ndo, "who-has %s", ipaddr_string(ndo, TPA(ap))));
-		if (memcmp((const char *)ezero, (const char *)THA(ap), HRD_LEN(ap)) != 0)
+		if (isnonzero((const u_char *)THA(ap), HRD_LEN(ap)))
 			ND_PRINT((ndo, " (%s)",
 				  linkaddr_string(ndo, THA(ap), linkaddr, HRD_LEN(ap))));
 		ND_PRINT((ndo, " tell %s", ipaddr_string(ndo, SPA(ap))));
diff --git a/tests/TESTLIST b/tests/TESTLIST
index b625843..7e37acc 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -317,3 +317,4 @@ stp-heapoverflow-2	stp-heapoverflow-2.pcap	stp-heapoverflow-2.out	-t -v -n
 stp-heapoverflow-3	stp-heapoverflow-3.pcap	stp-heapoverflow-3.out	-t -v -n
 stp-heapoverflow-4	stp-heapoverflow-4.pcap	stp-heapoverflow-4.out	-t -v -n
 stp-heapoverflow-5	stp-heapoverflow-5.pcap	stp-heapoverflow-5.out	-t -v -n
+arp-too-long-tha	arp-too-long-tha.pcap	arp-too-long-tha.out	-t -v -n
diff --git a/tests/arp-too-long-tha.out b/tests/arp-too-long-tha.out
new file mode 100644
index 0000000..c70ad83
--- /dev/null
+++ b/tests/arp-too-long-tha.out
@@ -0,0 +1 @@
+ARP, Unknown Hardware (12336) (len 14), IPv4 (len 4), Request who-has 48.48.48.48 (30:30:30:30:30:30:30:30:30:30:30:30:30:30) tell 48.48.48.48, length 808464414
diff --git a/tests/arp-too-long-tha.pcap b/tests/arp-too-long-tha.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..b15a00d5e16c1de7a4d0388ff05624138b9b4321
GIT binary patch
literal 180
zcmd<$<>fMAU|{gI(UxLlFdzyr0@W)3F+x3z#Q-*e4JelY#2^4O&;f}J6YE%EV8Fo!
O#0-2a42&>Q!ZZN#(i-#t

literal 0
HcmV?d00001

-- 
1.7.9.5

