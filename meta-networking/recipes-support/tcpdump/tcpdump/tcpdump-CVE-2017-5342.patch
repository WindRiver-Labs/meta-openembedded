From 0db4dcafe5ae38201d3869c96a96cb714d82ff35 Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Tue, 10 Jan 2017 14:12:14 +0000
Subject: [PATCH] CVE-2017-5342/pass correct caplen value to ether_print()

In that function the "length" parameter means off-the-wire length, that
is, the length declared inside the outer header. The "caplen" parameter
means the amount of bytes actually available in the captured packet.

gre_print_0() and the functions modelled after it passed the value of
"length" instead of the value of "caplen", this could make ether_print()
access beyond the memory allocated for the captured packet. Brian
Carpenter had demonstrated this for the OTV case.

Fix the involved functions that call ether_print() to pass the correct
value and leave a comment to dismiss "caplen" later as its value can be
reliably derived from the other ether_print() parameters.
---
 print-ether.c                 |    2 ++
 print-geneve.c                |    2 +-
 print-gre.c                   |    2 +-
 print-otv.c                   |    2 +-
 print-vxlan.c                 |    2 +-
 tests/TESTLIST                |    1 +
 tests/otv-heapoverflow-2.out  |   11 +++++++++++
 tests/otv-heapoverflow-2.pcap |  Bin 0 -> 896 bytes
 10 files changed, 20 insertions(+), 6 deletions(-)
 create mode 100644 tests/otv-heapoverflow-2.out
 create mode 100644 tests/otv-heapoverflow-2.pcap

diff --git a/print-ether.c b/print-ether.c
index 5072c44..241c507 100644
--- a/print-ether.c
+++ b/print-ether.c
@@ -122,6 +122,8 @@ ether_hdr_print(netdissect_options *ndo,
  * This might be encapsulated within another frame; we might be passed
  * a pointer to a function that can print header information for that
  * frame's protocol, and an argument to pass to that function.
+ *
+ * FIXME: caplen can and should be derived from ndo->ndo_snapend and p.
  */
 void
 ether_print(netdissect_options *ndo,
diff --git a/print-geneve.c b/print-geneve.c
index f031963..d1ed242 100644
--- a/print-geneve.c
+++ b/print-geneve.c
@@ -211,7 +211,7 @@ geneve_print(netdissect_options *ndo, const u_char *bp, u_int len)
 
     if (ethertype_print(ndo, prot, bp, len, len) == 0) {
         if (prot == ETHERTYPE_TEB)
-            ether_print(ndo, bp, len, len, NULL, NULL);
+            ether_print(ndo, bp, len, ndo->ndo_snapend - bp, NULL, NULL);
         else
             ND_PRINT((ndo, "geneve-proto-0x%x", prot));
     }
diff --git a/print-gre.c b/print-gre.c
index 4b83ca2..e0f60c9 100644
--- a/print-gre.c
+++ b/print-gre.c
@@ -227,7 +227,7 @@ gre_print_0(netdissect_options *ndo, const u_char *bp, u_int length)
 		isoclns_print(ndo, bp, len, len);
 		break;
 	case ETHERTYPE_TEB:
-		ether_print(ndo, bp, len, len, NULL, NULL);
+		ether_print(ndo, bp, len, ndo->ndo_snapend - bp, NULL, NULL);
 		break;
 	default:
 		ND_PRINT((ndo, "gre-proto-0x%x", prot));
diff --git a/print-otv.c b/print-otv.c
index f276441..5a82752 100644
--- a/print-otv.c
+++ b/print-otv.c
@@ -60,7 +60,7 @@ otv_print(netdissect_options *ndo, const u_char *bp, u_int len)
     ND_TCHECK(*bp);
     bp += 1;
 
-    ether_print(ndo, bp, len - 8, len - 8, NULL, NULL);
+    ether_print(ndo, bp, len - 8, ndo->ndo_snapend - bp, NULL, NULL);
     return;
 
 trunc:
diff --git a/print-vxlan.c b/print-vxlan.c
index 052cbe3..0c2a82e 100644
--- a/print-vxlan.c
+++ b/print-vxlan.c
@@ -58,5 +58,5 @@ vxlan_print(netdissect_options *ndo, const u_char *bp, u_int len)
     ND_PRINT((ndo, "flags [%s] (0x%02x), ", flags & 0x08 ? "I" : ".", flags));
     ND_PRINT((ndo, "vni %u\n", vni));
 
-    ether_print(ndo, bp, len - 8, len - 8, NULL, NULL);
+    ether_print(ndo, bp, len - 8, ndo->ndo_snapend - bp, NULL, NULL);
 }
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 379dae5..5046046 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -325,6 +325,7 @@ tftp-heapoverflow	tftp-heapoverflow.pcap	tftp-heapoverflow.out	-t -v -n
 ipv6hdr-heapoverflow	ipv6hdr-heapoverflow.pcap	ipv6hdr-heapoverflow.out	-t
 ipv6hdr-heapoverflow-v	ipv6hdr-heapoverflow.pcap	ipv6hdr-heapoverflow-v.out	-t -v
 otv-heapoverflow-1	otv-heapoverflow-1.pcap		otv-heapoverflow-1.out		-t -c10
+otv-heapoverflow-2	otv-heapoverflow-2.pcap		otv-heapoverflow-2.out		-t -c10
 
 # RTP tests
 # fuzzed pcap
diff --git a/tests/otv-heapoverflow-2.out b/tests/otv-heapoverflow-2.out
new file mode 100644
index 0000000..7ea809f
--- /dev/null
+++ b/tests/otv-heapoverflow-2.out
@@ -0,0 +1,11 @@
+IP 192.168.0.134.47808 > 192.168.0.24.47808: UDP, length 6
+IP 192.168.0.134.47808 > 192.168.0.24.47808: UDP, length 12
+IP 192.168.0.24.47808 > 192.168.0.134.47808: UDP, length 6
+IP 192.168.0.24.47808 > 192.168.0.255.47808: UDP, length 18
+IP 192.168.0.105.47808 > 192.168.0.255.47808: UDP, length 25
+IP 192.168.0.24.47808 > 192.168.0.134.47808: UDP, length 31
+IP 192.168.0.18.47808 > 192.168.0.255.47808: UDP, length 24
+IP 192.168.0.24.40896 > 192.168.0.134.47808: UDP, length 30
+IP 192.168.0.24.47808 > 192.168.0.255.47808: UDP, length 20
+IP 192.168.0.9.37123 > 97.34.1.224.8472: OTV, flags [I] (0x9d), overlay 12124160, instance 4587520
+[|ether]
diff --git a/tests/otv-heapoverflow-2.pcap b/tests/otv-heapoverflow-2.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..69d6e7856e1e8e79327bc96ccd69b1fa9bdb34c7
GIT binary patch
literal 896
zcmb7?O(+Cm9LArq%kEmH-HlrEvAYMPXbEiy<s*v2<iL$RZXBGHL{<@Q?j*@axot|8
z!xjh1cU+~!!AWUzQRDxA-|;ydy!F(~;rY$)Y2K^-*m4T2ct7>@pa4%}Gq$dt`%DDs
zorBvWxK@$x*lX^yqZJ60_5c%ZAhCgIiZ`B!C!j7Qqp3)H?C1Ur^=qigG4)GIdw=O?
z4W~yP$WVN`4%KC6%JXX`*oq^+FImz;I|d5eM=myC6KMfNfiy0B9%fnX>IX{~=L@S`
zJ7L!0oWarsE0<VScqIF)*Cw%=3C}TD{-N>8UEx&?G@;48ty3>Tku3j6MbwELgMxz;
zU^I|=FmDMcR@S@eP|-m+j%jM0b}ICehMt^SEc6QbGx5ZqV05XNBqm3=-l4w?+1J9g
z%C<tb?x!t+@J{LKdzhVb!Yh!vOSpQ3tKWmc0bgf##8(k&B;NlIPfd=fXs0U2G__Vc
z`#yDv?^cnRTELdZ)E{2V4X>$aASB21hlAR=;7$>PZ;M=-M_ebe6o{3Ma6q}8xA?tG
mTaT$|Ari-AS)*MD+6$3BTI1AO+yUCCz%e<5v`f(%l@4zSQv5&w

literal 0
HcmV?d00001

-- 
1.7.9.5

