From 5d214e36eed3565fbdc0f9b527bbc33a6bb63972 Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Sat, 14 Jan 2017 00:20:47 +0000
Subject: [PATCH] CVE-2017-5484/ATM: fix an incorrect bounds check

The function sig_print() did receive a correct caplen parameter value
but didn't use it correctly and could overread by one byte as Brian
Carpenter has demonstrated. Fix it by switching to the standard macros.
---
 print-atm.c                 |   18 ++++++++----------
 tests/TESTLIST              |    1 +
 tests/atm-heapoverflow.out  |    1 +
 tests/atm-heapoverflow.pcap |  Bin 0 -> 124 bytes
 4 files changed, 10 insertions(+), 10 deletions(-)
 create mode 100644 tests/atm-heapoverflow.out
 create mode 100644 tests/atm-heapoverflow.pcap

diff --git a/print-atm.c b/print-atm.c
index 058541c..596e406 100644
--- a/print-atm.c
+++ b/print-atm.c
@@ -257,24 +257,18 @@ static const struct tok msgtype2str[] = {
 
 static void
 sig_print(netdissect_options *ndo,
-          const u_char *p, int caplen)
+          const u_char *p)
 {
 	uint32_t call_ref;
 
-	if (caplen < PROTO_POS) {
-		ND_PRINT((ndo, "%s", tstr));
-		return;
-	}
+	ND_TCHECK(p[PROTO_POS]);
 	if (p[PROTO_POS] == Q2931) {
 		/*
 		 * protocol:Q.2931 for User to Network Interface
 		 * (UNI 3.1) signalling
 		 */
 		ND_PRINT((ndo, "Q.2931"));
-		if (caplen < MSG_TYPE_POS) {
-			ND_PRINT((ndo, " %s", tstr));
-			return;
-		}
+		ND_TCHECK(p[MSG_TYPE_POS]);
 		ND_PRINT((ndo, ":%s ",
 		    tok2str(msgtype2str, "msgtype#%d", p[MSG_TYPE_POS])));
 
@@ -290,6 +284,10 @@ sig_print(netdissect_options *ndo,
 		/* SCCOP with some unknown protocol atop it */
 		ND_PRINT((ndo, "SSCOP, proto %d ", p[PROTO_POS]));
 	}
+	return;
+
+trunc:
+	ND_PRINT((ndo, " %s", tstr));
 }
 
 /*
@@ -307,7 +305,7 @@ atm_print(netdissect_options *ndo,
 		switch (vci) {
 
 		case VCI_PPC:
-			sig_print(ndo, p, caplen);
+			sig_print(ndo, p);
 			return;
 
 		case VCI_BCC:
diff --git a/tests/TESTLIST b/tests/TESTLIST
index e8856c0..8808a3f 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -327,6 +327,7 @@ ipv6hdr-heapoverflow-v	ipv6hdr-heapoverflow.pcap	ipv6hdr-heapoverflow-v.out	-t -
 otv-heapoverflow-1	otv-heapoverflow-1.pcap		otv-heapoverflow-1.out		-t -c10
 otv-heapoverflow-2	otv-heapoverflow-2.pcap		otv-heapoverflow-2.out		-t -c10
 q933-heapoverflow-2	q933-heapoverflow-2.pcap	q933-heapoverflow-2.out		-t
+atm-heapoverflow	atm-heapoverflow.pcap		atm-heapoverflow.out		-t -c1 -e
 
 # bad packets from Kamil Frankowicz
 snmp-heapoverflow-1	snmp-heapoverflow-1.pcap	snmp-heapoverflow-1.out		-t
diff --git a/tests/atm-heapoverflow.out b/tests/atm-heapoverflow.out
new file mode 100644
index 0000000..c9b12fd
--- /dev/null
+++ b/tests/atm-heapoverflow.out
@@ -0,0 +1 @@
+Rx: VPI:0 VCI:5  [|atm]
diff --git a/tests/atm-heapoverflow.pcap b/tests/atm-heapoverflow.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..6918f3ed38c2596b1d4bdeb5ae1e2bf386323486
GIT binary patch
literal 124
zcmca|c+)~A1{Q{s3=9m6K+FQf)j%8q#J8_7m^cAxCx&<bfpV-M1p*+I4NM9QObiSh
y|CzZtxS}##6M>2t^V4c_Qf-woN=k~-^()fy^bN5H87kRnrWRNk2Il8kDF6Uv86ATF

literal 0
HcmV?d00001

-- 
1.7.9.5

