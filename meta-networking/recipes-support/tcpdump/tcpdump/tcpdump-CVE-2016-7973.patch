From 5356a9ea6903b835185eda83e8a17d6e4e990fb5 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Fri, 3 Jul 2015 11:43:30 -0700
Subject: [PATCH] CVE-2016-7973/Add some bounds checks.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes a heap overflow found with American Fuzzy Lop by Hanno Böck.
---
 print-atalk.c                       |   25 ++++++++++++++++++++++++-
 tests/TESTLIST                      |    1 +
 tests/heapoverflow-atalk_print.out  |    1 +
 tests/heapoverflow-atalk_print.pcap |  Bin 0 -> 88 bytes
 4 files changed, 26 insertions(+), 1 deletion(-)
 create mode 100644 tests/heapoverflow-atalk_print.out
 create mode 100644 tests/heapoverflow-atalk_print.pcap

diff --git a/print-atalk.c b/print-atalk.c
index 2a67499..59de3a6 100644
--- a/print-atalk.c
+++ b/print-atalk.c
@@ -78,7 +78,14 @@ u_int
 ltalk_if_print(netdissect_options *ndo,
                const struct pcap_pkthdr *h, const u_char *p)
 {
-	return (llap_print(ndo, p, h->caplen));
+	u_int hdrlen;
+
+	hdrlen = llap_print(ndo, p, h->caplen);
+	if (hdrlen == 0) {
+		/* Cut short by the snapshot length. */
+		return (h->caplen);
+	}
+	return (hdrlen);
 }
 
 /*
@@ -94,6 +101,10 @@ llap_print(netdissect_options *ndo,
 	u_short snet;
 	u_int hdrlen;
 
+	if (!ND_TTEST2(*bp, sizeof(*lp))) {
+		ND_PRINT((ndo, " [|llap]"));
+		return (0);	/* cut short by the snapshot length */
+	}
 	if (length < sizeof(*lp)) {
 		ND_PRINT((ndo, " [|llap %u]", length));
 		return (length);
@@ -105,6 +116,10 @@ llap_print(netdissect_options *ndo,
 	switch (lp->type) {
 
 	case lapShortDDP:
+		if (!ND_TTEST2(*bp, ddpSSize)) {
+			ND_PRINT((ndo, " [|sddp]"));
+			return (0);	/* cut short by the snapshot length */
+		}
 		if (length < ddpSSize) {
 			ND_PRINT((ndo, " [|sddp %u]", length));
 			return (length);
@@ -121,6 +136,10 @@ llap_print(netdissect_options *ndo,
 		break;
 
 	case lapDDP:
+		if (!ND_TTEST2(*bp, ddpSize)) {
+			ND_PRINT((ndo, " [|ddp]"));
+			return (0);	/* cut short by the snapshot length */
+		}
 		if (length < ddpSize) {
 			ND_PRINT((ndo, " [|ddp %u]", length));
 			return (length);
@@ -167,6 +186,10 @@ atalk_print(netdissect_options *ndo,
         if(!ndo->ndo_eflag)
             ND_PRINT((ndo, "AT "));
 
+	if (!ND_TTEST2(*bp, ddpSize)) {
+		ND_PRINT((ndo, " [|ddp]"));
+		return;
+	}
 	if (length < ddpSize) {
 		ND_PRINT((ndo, " [|ddp %u]", length));
 		return;
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 3eb0b56..b5f00e6 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -293,3 +293,4 @@ cve2015-0261_02    cve2015-0261-crash.pcap      cve2015-0261-crash.out -t -v
 # bad packets from Hanno Böck
 heap-overflow-1	heap-overflow-1.pcap		heap-overflow-1.out	-t -v -n
 heap-overflow-2	heap-overflow-2.pcap		heap-overflow-2.out	-t -v -n
+heapoverflow-atalk_print	heapoverflow-atalk_print.pcap	heapoverflow-atalk_print.out	-t -v -n
diff --git a/tests/heapoverflow-atalk_print.out b/tests/heapoverflow-atalk_print.out
new file mode 100644
index 0000000..0ddc641
--- /dev/null
+++ b/tests/heapoverflow-atalk_print.out
@@ -0,0 +1 @@
+et1 AT  [|ddp]
diff --git a/tests/heapoverflow-atalk_print.pcap b/tests/heapoverflow-atalk_print.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..f903527425e21752096e1cc979d0bc71f9ed8d7b
GIT binary patch
literal 88
fcmca|c+)}yBp|@Rz|hFRfDi%lVVt`#1`#v>W!n-7

literal 0
HcmV?d00001

-- 
1.7.9.5

