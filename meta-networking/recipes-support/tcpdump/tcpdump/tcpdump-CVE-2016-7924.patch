From d9dbb118f2f9c09a8548a2b34a6573f611c0bcf7 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Fri, 3 Jul 2015 16:39:25 -0700
Subject: [PATCH] CVE-2016-7924/Add some bounds checks.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes a heap overflow found with American Fuzzy Lop by Hanno BÃ¶ck.

Also, get rid of the return value for oam_print(), as it's not used and
not useful.
---
 netdissect.h                    |    2 +-
 print-atm.c                     |   14 +++++++++++---
 tests/TESTLIST                  |    1 +
 tests/atm-oam-heapoverflow.out  |    1 +
 tests/atm-oam-heapoverflow.pcap |  Bin 0 -> 88 bytes
 5 files changed, 14 insertions(+), 4 deletions(-)
 create mode 100644 tests/atm-oam-heapoverflow.out
 create mode 100644 tests/atm-oam-heapoverflow.pcap

diff --git a/netdissect.h b/netdissect.h
index a855e87..3bba2cb 100644
--- a/netdissect.h
+++ b/netdissect.h
@@ -486,7 +486,7 @@ extern void pgm_print(netdissect_options *, const u_char *, u_int, const u_char
 extern void pptp_print(netdissect_options *, const u_char *);
 extern void ldp_print(netdissect_options *, const u_char *, u_int);
 extern void wb_print(netdissect_options *, const void *, u_int);
-extern int oam_print(netdissect_options *, const u_char *, u_int, u_int);
+extern void oam_print(netdissect_options *, const u_char *, u_int, u_int);
 extern void atm_print(netdissect_options *, u_int, u_int, u_int, const u_char *, u_int, u_int);
 extern u_int sunatm_if_print(netdissect_options *, const struct pcap_pkthdr *, const u_char *);
 extern u_int atm_if_print(netdissect_options *, const struct pcap_pkthdr *, const u_char *);
diff --git a/print-atm.c b/print-atm.c
index 5d3d339..058541c 100644
--- a/print-atm.c
+++ b/print-atm.c
@@ -360,7 +360,7 @@ struct oam_fm_ais_rdi_t {
     uint8_t unused[28];
 };
 
-int
+void
 oam_print (netdissect_options *ndo,
            const u_char *p, u_int length, u_int hec)
 {
@@ -374,6 +374,7 @@ oam_print (netdissect_options *ndo,
     } oam_ptr;
 
 
+    ND_TCHECK(*(p+ATM_HDR_LEN_NOHEC+hec));
     cell_header = EXTRACT_32BITS(p+hec);
     cell_type = ((*(p+ATM_HDR_LEN_NOHEC+hec))>>4) & 0x0f;
     func_type = (*(p+ATM_HDR_LEN_NOHEC+hec)) & 0x0f;
@@ -390,7 +391,7 @@ oam_print (netdissect_options *ndo,
            clp, length));
 
     if (!ndo->ndo_vflag) {
-        return 1;
+        return;
     }
 
     ND_PRINT((ndo, "\n\tcell-type %s (%u)",
@@ -409,6 +410,7 @@ oam_print (netdissect_options *ndo,
     switch (cell_type << 4 | func_type) {
     case (OAM_CELLTYPE_FM << 4 | OAM_FM_FUNCTYPE_LOOPBACK):
         oam_ptr.oam_fm_loopback = (const struct oam_fm_loopback_t *)(p + OAM_CELLTYPE_FUNCTYPE_LEN);
+        ND_TCHECK(*oam_ptr.oam_fm_loopback);
         ND_PRINT((ndo, "\n\tLoopback-Indicator %s, Correlation-Tag 0x%08x",
                tok2str(oam_fm_loopback_indicator_values,
                        "Unknown",
@@ -431,6 +433,7 @@ oam_print (netdissect_options *ndo,
     case (OAM_CELLTYPE_FM << 4 | OAM_FM_FUNCTYPE_AIS):
     case (OAM_CELLTYPE_FM << 4 | OAM_FM_FUNCTYPE_RDI):
         oam_ptr.oam_fm_ais_rdi = (const struct oam_fm_ais_rdi_t *)(p + OAM_CELLTYPE_FUNCTYPE_LEN);
+        ND_TCHECK(*oam_ptr.oam_fm_ais_rdi);
         ND_PRINT((ndo, "\n\tFailure-type 0x%02x", oam_ptr.oam_fm_ais_rdi->failure_type));
         ND_PRINT((ndo, "\n\tLocation-ID "));
         for (idx = 0; idx < sizeof(oam_ptr.oam_fm_ais_rdi->failure_location); idx++) {
@@ -449,6 +452,7 @@ oam_print (netdissect_options *ndo,
     }
 
     /* crc10 checksum verification */
+    ND_TCHECK2(*(p + OAM_CELLTYPE_FUNCTYPE_LEN + OAM_FUNCTION_SPECIFIC_LEN), 2);
     cksum = EXTRACT_16BITS(p + OAM_CELLTYPE_FUNCTYPE_LEN + OAM_FUNCTION_SPECIFIC_LEN)
         & OAM_CRC10_MASK;
     cksum_shouldbe = verify_crc10_cksum(0, p, OAM_PAYLOAD_LEN);
@@ -457,5 +461,9 @@ oam_print (netdissect_options *ndo,
            cksum,
            cksum_shouldbe == 0 ? "" : "in"));
 
-    return 1;
+    return;
+
+trunc:
+    ND_PRINT((ndo, "[|oam]"));
+    return;
 }
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 99c40a4..9ec0142 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -303,3 +303,4 @@ gre-heapoverflow-2	gre-heapoverflow-2.pcap	gre-heapoverflow-2.out	-t -v -n
 radiotap-heapoverflow	radiotap-heapoverflow.pcap	radiotap-heapoverflow.out -t -v -n
 isoclns-heapoverflow	isoclns-heapoverflow.pcap	isoclns-heapoverflow.out	-t -v -n
 tcp-auth-heapoverflow	tcp-auth-heapoverflow.pcap	tcp-auth-heapoverflow.out	-t -v -n
+atm-oam-heapoverflow	atm-oam-heapoverflow.pcap	atm-oam-heapoverflow.out	-t -v -n
diff --git a/tests/atm-oam-heapoverflow.out b/tests/atm-oam-heapoverflow.out
new file mode 100644
index 0000000..cdcb8ce
--- /dev/null
+++ b/tests/atm-oam-heapoverflow.out
@@ -0,0 +1 @@
+[|oam]
diff --git a/tests/atm-oam-heapoverflow.pcap b/tests/atm-oam-heapoverflow.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..2d48ebdaf7b5ba39123fc3f3397a25c1890a0f69
GIT binary patch
literal 88
hcmca|c+)}yB*4PJz);P=fDi%l!5jt#W`rPN762*E5WN5Z

literal 0
HcmV?d00001

-- 
1.7.9.5

